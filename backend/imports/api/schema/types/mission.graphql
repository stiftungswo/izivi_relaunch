enum MissionStatus {
  DRAFT
  WAITING_AUTHORITY
  READY
  FINISHED
}

enum MissionExpensesDayType {
  WORK # Arbeitstag (Diensttag)
  HOLIDAY # Gesetzlicher Feiertag / Betriebsferien (Diensttag, arbeitsfrei)
  HOLIDAY_PERSONAL # Ferien (Diensttag, arbeitsfrei)
  ILLNESS # Krankheit (Diensttag, arbeitsfrei)
  ABSENCE # Kein Diensttag
}

type MissionExpensesRateCalculation {
  expenseRate: ExpenseRate
  price: Money
}

type MissionExpensesDayTypeCalculation {
  type: MissionExpensesDayType
  amountOfDays: Int
}

type MissionExpensesDayCalculation {
  day: Date,
  type: MissionExpensesDayType
  expenseRates: [MissionExpensesRateCalculation]
  totalDayPrice: Money
}

type MissionExpenses {
  totalAmountOfDays: Int!
  totalPrice: Money!
  dayTypes: [MissionExpensesDayTypeCalculation]
  rates: [MissionExpensesRateCalculation]
  days: [MissionExpensesDayCalculation]
}

type Mission {
  _id: ID!
  specification: Specification!
  user: User!
  status: MissionStatus!,
  isTrial: Boolean,
  isLastMission: Boolean,
  isLongMission: Boolean,
  start: Date,
  end: Date,
  holidayBalance: Int
  illnessDayBalance: Int
  workingClothCostBalance: Money
  serviceDays(from: Date, to: Date): Int
  expenses(from: Date!, to: Date!) : MissionExpenses,
}
